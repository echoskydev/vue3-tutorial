================================
💡 Workshop Laravel 11 with Vue 3  💡
================================

⚡ DAY 1
1.Setup Tools
2.What new in Laravel 11
3.Setup Project
4.PostgreSQL/MySQL Connect
5.API Controller & Methods
-------------------------------------------------------
🚀1. การเตรียมเครื่องมือและความพร้อม
💻 XAMPP & PHP 8.2.x
---
php -v

💻 MySQL / MariaDB
---
mysql --version

💻 Node JS 18.x and up
---
node -v
npm -v
ppx -v

💻 Composer
---
composer --version

💻 PostgreSQL 15 and up
---
psql --version

💻 Git
---
git version

💻 VSCode
---
code -v

🚀 2.What new in Laravel 11
---
- การยกเลิกการรองรับ PHP 8.1 เพื่อรองรับเวอร์ชัน PHP ที่ใหม่กว่า
- โครงสร้างแอปพลิเคชันที่กะทัดรัดมากขึ้นโดยลดไฟล์และโค้ดที่ซ้ำซ้อน
- คุณสมบัติ Dumpable Trait ใหม่ที่ช่วยในการดีบั๊ก
- การเปลี่ยนแปลงวิธีการระบุ Model Casts จากพร็อพเพอร์ตี้เป็นวิธีการ
- การรวมการตั้งค่าคอนฟิกจากหลายไฟล์เป็นหนึ่งไฟล์ .env
- การรวมไฟล์ไมเกรชันมาตรฐานเหลือเพียง 2 ไฟล์
- การลบ Console Kernel และย้ายคำสั่ง Artisan มาไว้ใน routes/console.php
- การเปลี่ยนแปลงเกี่ยวกับไฟล์ routes สำหรับ API และ Websockets
- ข้อดีในการอัปเกรดเป็น Laravel 11 เช่น ประสิทธิภาพที่ดีขึ้น, ประสบการณ์ผู้พัฒนาที่ดีขึ้น, การรักษาความปลอดภัย, เทมเพลต Blade ใหม่, ฟีเจอร์ใหม่ๆ

🚀3.Setup Project
---
</> Server Prerequisites to Install Laravel 11

PHP >= 8.2
Ctype PHP Extension
cURL PHP Extension
DOM PHP Extension
Fileinfo PHP Extension
Filter PHP Extension
Hash PHP Extension
Mbstring PHP Extension
OpenSSL PHP Extension
PCRE PHP Extension
PDO PHP Extension
Session PHP Extension
Tokenizer PHP Extension
XML PHP Extension

การติดตั้ง
---
</> ติดตั้งเวอร์ชั่นล่าสุด (11.x)
💻 composer create-project  laravel/laravel  mylaravel11-app 

หมายเหตุ ติดตั้งระบุเลข Version เฉพาะ
💻 composer create-project laravel/laravel:^10.0 mylaravel10-app

</> การรันโปรเจ็กต์
---
💻 php artisan serve
ปกติจะรันอยู่ที่ http://127.0.0.1:8000

หากต้องการ run ที่ port อื่น 
💻php artisan serve  --port=9000

</> Laravel Basic Routing
---

</> Basic Routing
---

Route::get('/', function () {
    return 'Hello World!';
});

Route::get('about', function(){
    return 'My about page';
});

</> Routing with Parameters
---
Route::get('user/{id}', function ($id) {
    return 'User:' . $id;
});

Route::get('posts/{post}/comments/{comment}', function ($postID, $commentID) {
    return 'Post:' . $postID . '<br>Comment:' . $commentID;
});

Route::get('member/{name?}', function ($name = null) {
    return 'Hello' . $name;
});

</> Regular Expression Constraints
---
Route::get('category/{name}', function ($name) {
    return $name;
})->where('name', '[A-Za-z]+');

Route::get('group/{id}', function ($id) {
    return $id;
})->where('id','[0-9]+');

Route::get('product/{id}/{name}', function ($id, $name) {
    return 'Product ID:'.$id.'<br>Product name:'.$name;
})->where(['id' => '[0-9]+', 'name' => '[a-z]+']);

</> Named Routes
---
Route::get('guest/showroom/data/{name?}',function($name=null){
    return'Hello'.$name;
})->name('guestprofile');

Route post,put,delete
---
Route::post('user/profile',function(){
    return'POST';
});

Route::put('user/profile',function(){
    return'PUT';
});

Route::delete('user/profile',function(){
    return'DELETE';
});

</> พื้นฐานการทำงานกับ Controller ใน Laravel 11
---
การสร้าง Controller ใหม่
php artisan make:controller HomeController

</> การเรียกใช้งาน Controller ใน routes (web.php)
---
Method 1:

Route::get(
  'profile’,
  'App\Http\Controllers\HomeController@showprofile’
);

Method 2:

use App\Http\Controllers\HomeController;

Route::get(
  'profile’,
  [HomeController::class,'showprofile’]
);

</> Route Prefixes
---
Route::group(['prefix' => 'admin'], function () {
    Route::get('users', function ()    {
        // Matches The "/admin/users" URL
    });
});

Route::group(['prefix' => 'accounts/{account_id}'], function () {
    Route::get('detail', function ($account_id)    {
        // Matches The accounts/{account_id}/detail URL
    });
});


🚀4.PostgreSQL/MySQL Connect

</> การทำงานกับฐานข้อมูล
---
เชื่อมต่อฐานข้อมูล PostgreSQL
แก้ไขไฟล์ .env
---
# SQLite
# DB_CONNECTION=sqlite

# MySQL
# DB_CONNECTION=mysql
# DB_HOST=127.0.0.1
# DB_PORT=3306
# DB_DATABASE=laravel
# DB_USERNAME=root
# DB_PASSWORD=

# PostgreSQL
DB_CONNECTION=pgsql
DB_HOST=127.0.0.1
DB_PORT=5432
DB_DATABASE=samplelaraveldb
DB_USERNAME=postgres
DB_PASSWORD=123456

</> คำสั่ง Running Migrations
---
💻 php artisan migrate

</> สรุปคำสั่ง สร้าง migration และ db:seed พร้อมกัน
---
💻 php artisan migrate:fresh --seed

</> การสร้าง API ใน Laravel 11
---
ติดตั้ง api
---
💻 php artisan install:api

🚀5.API Controller & Methods

</> ทดสอบเขียน api ที่ไฟล์ routes/api.php
---
<?php

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;

// Route::get('/user', function (Request $request) {
//     return $request->user();
// })->middleware('auth:sanctum');

// กำหนดตัวแปร $users
$users = [
    [
        'name' => 'John Doe',
        'email' => 'john@email.com',
    ],
    [
        'name' => 'Jane Doe',
        'email' => 'jane@email.com',
    ]
];

// GET /api/user
Route::get('/user',  function (Request $request) use ($users){
    return $users;
});

// POST /api/user
// Payload: { "name": "John Doe", "email": "john@email.com"}
Route::post('/user', function (Request $request)  use ($users){
    // Retrieve the name and email from the request body payload
    $name = $request->input('name');
    $email = $request->input('email');

    // Add the new user to the users array
    $users[] = [
        'name' => $name,
        'email' => $email,
    ];

    // Return the name and email
    return $users;
});

// PUT /api/user/1
// Payload: { "name": "Jack Doe", "email": "jack@email.com"}
Route::put('/user/{id}', function (Request $request, $id) use ($users) {
    // Retrieve the name and email from the request body payload
    $name = $request->input('name');
    $email = $request->input('email');

    // Update the user with the given id
    $users[$id] = [
        'name' => $name,
        'email' => $email,
    ];

    // Return the name and email
    return $users;
});

// DELETE /api/user/1
Route::delete('/user/{id}', function (Request $request, $id) use ($users) {
    // Remove the user with the given id
    unset($users[$id]);

    // Return the name and email
    return $users;
});


-------------------------------------------------------
⚡ DAY 2
1.Create Laravel Project for Rest API
2.Sanctum package settings
3.API Register, Login, Refresh, Logout
4.Deploy Laravel Project to cloud
-------------------------------------------------------
🚀 1.Create Laravel Project for Rest API

Step 1: สร้างโปรเจ็กต์ใหม่ใน Laravel 11
💻 composer create-project  laravel/laravel laravel11-store-api

Step 2: เปิดเข้า vscode
💻 code laravel11-store-api -r

Step 3: ทดสอบรันโปรเจ็กต์
💻 php artisan serve

Step 4: สร้างฐานข้อมูลใหม่ใน PostgreSQL "laravelstore"
</> CREATE DATABASE laravelstore;

Step 5: แก้ไขไฟล์ .env เพื่อ Connect ฐานข้อมูล PostgreSQL
</>

# PostgreSQL
DB_CONNECTION=pgsql
DB_HOST=127.0.0.1
DB_PORT=5432
DB_DATABASE=laravelstore
DB_USERNAME=postgres
DB_PASSWORD=123456

Step 6: สร้าง migration resource conrtroller and model
💻 php artisan make:model --migration --controller Product --api

จะได้ไฟล์ app/Http/Controllers/ProductController.php เป็นแบบ API

และได้ไฟล์ database/migrations/2024_05_24_100645_create_products_table.php 

Step 7: กำหนดโครงสร้าง migrations ที่ไฟล์ "xxx_create_users_table.php"

public function up(): void
{
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->string('fullname');
            $table->string('username');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->string('tel');
            $table->string('avatar')->nullable();
            $table->tinyInteger('role')->default(1);
            $table->rememberToken();
            $table->timestamps();
        });
 }

Step 8: กำหนดโครงสร้าง migrations ที่ไฟล์ "xxx_create_products_table.php"

public function up()
{
        Schema::create('products', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('slug');
            $table->string('description')->nullable();
            $table->decimal('price',9, 2); // 2,859,893.50
            $table->string('image')->nullable();
            $table->unsignedBigInteger('user_id')->comment('Created By User');
            $table->foreign('user_id')->references('id')->on('users');
            $table->timestamps();
        });
}


🚀 2.Sanctum package settings

Step 9: ติดตั้ง api routes ใน Laravel 11
💻 php artisan install:api

One new database migration has been published. Would you like to run all pending database migrations? (yes/no) [yes]
ตอบ yes เพื่อทำการ migrate ฐานข้อมูล

จะได้ตารางทั้งหมด 11 ตารางในฐานข้อมูล
cache
cache_locks
failed_jobs
job_batches
jobs
migrations
password_reset_tokens
personal_access_tokens
products
sessions
users

หมายเหตุ หากมีการแก้ไข migration สามารถสั่งอัพรัน migrate ใหม่
💻 php artisan migrate

Step 10: เพิ่ม Laravel\Sanctum\HasApiTokens เข้าไปที่ User model
</> app/Models/User.php

use Laravel\Sanctum\HasApiTokens;

class User extends Authenticatable
{
    use HasApiTokens, HasFactory, Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'fullname',
        'username',
        'email',
        'email_verified_at',
        'password',
        'tel',
        'avatar',
        'role',
    ];

    /**
     * The attributes that should be hidden for serialization.
     *
     * @var array<int, string>
     */
    protected $hidden = [
        'password',
        'remember_token',
    ];

    /**
     * Get the attributes that should be cast.
     *
     * @return array<string, string>
     */
    protected function casts(): array
    {
        return [
            'email_verified_at' => 'datetime',
            'password' => 'hashed',
        ];
    }

    /**
     * Products Relationship
     */
    public function products()
    {
        return $this->hasMany(Product::class)->orderBy('id', 'desc');
    }
}


Step 11: แก้ไข Product Model ที่ไฟล์ app/Models/Product.php 
</>

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Product extends Model
{
    use HasFactory;

    protected $fillable = [
        'name',
        'slug',
        'description',
        'price',
        'image',
        'user_id'
    ];

    /**
     * Relationship to Users
     */
    public function users(){

        // SELECT * 
        // FROM products
        // INNER JOIN users
        // ON products.user_id = users.id;

        return $this->belongsTo('App\Models\User','user_id')->select(['id','fullname','avatar']); 
    }
}

🚀 3.API Register, Login, Refresh Token, Logout

Step 12: สร้าง AuthController.php สำหรับไว้ทำ Register และ Login
💻 php artisan make:controller AuthController --model=User

Step 13: สร้าง Method register และ login ใน src\app\Http\Controllers\AuthController.php
</>

<?php

namespace App\Http\Controllers;

use App\Models\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;

class AuthController extends Controller
{
    // Register User
    public function register(Request $request){

        // Validate field
        $fields = $request->validate([
            'fullname' => 'required|string',
            'username' => 'required|string',
            'email'=> 'required|string|unique:users,email',
            'password'=>'required|string|confirmed',
            'tel'=>'required',
            'role'=> 'required|integer'
        ]);

        // Create user
        $user = User::create([
            'fullname' => $fields['fullname'],
            'username' => $fields['username'],
            'email' => $fields['email'],
            'password' => bcrypt($fields['password']), 
            'tel' => $fields['tel'],
            'role' => $fields['role']
        ]);

        $response = [
            'status' => true,
            'message' => "User registered successfully",
            'user' => $user,
        ];

        return response($response, 201);
    }

    // Login User
    public function login(Request $request) {

        // Validate field
        $fields = $request->validate([
            'email'=> 'required|string',
            'password'=>'required|string'
        ]);

        // Check email
        $user = User::where('email', $fields['email'])->first();

        // Check password
        if(!$user || !Hash::check($fields['password'], $user->password)) {
            return response([
                'status' => false,
                'message' => 'Login failed'
            ], 401);
        }else{
            
            // ลบ token เก่าออกแล้วค่อยสร้างใหม่
            $user->tokens()->delete();

            // Create token
            $token = $user->createToken($request->userAgent(), ["$user->role"])->plainTextToken;
    
            $response = [
                'status' => true,
                'message' => 'Login successfully',
                'user' => $user,
                'token' => $token
            ];
    
            return response($response, 201);
        }

    }

    // Refresh Token
    public function refreshToken(Request $request) {
        $user = $request->user();
        $user->tokens()->delete();
        $token = $user->createToken($request->userAgent(), ["$user->role"])->plainTextToken;
        $response = [
            'status' => true,
            'message' => 'Token refreshed',
            'user' => $user,
            'token' => $token
        ];
        return response($response, 201);
    }

    // Logout User
    public function logout(Request $request){
        auth()->user()->tokens()->delete();
        return [
            'status' => true,
            'message' => 'Logged out'
        ];
    }
}

Step 14: แก้ไขไฟล์ src\routes\api.php เพิ่ม routes
</>

<?php

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;
use App\Http\Controllers\AuthController;

// Route for register and login
Route::post('register',[AuthController::class, 'register']);
Route::post('login',[AuthController::class, 'login']);

Route::group(['middleware' => 'auth:sanctum'], function(){
    Route::post('refreshtoken', [AuthController::class, 'refreshToken']);
    Route::post('logout',[AuthController::class, 'logout']);
});

Step 15: ทดสอบ Register และ Login/Logout API
</>

การ register
---
http://localhost:8000/api/register
Method: POST
PayLoad
{
    "fullname":"John Doe",
    "username":"john",
    "email":"john@email.com",
    "password":"12345678",
    "password_confirmation":"12345678",
    "tel":"0881235678",
    "role":"1"
}

ผลลัพธ์ที่ควรได้กลับมา
---
{
  "status": true,
  "message": "User registered successfully",
  "user": {
    "fullname": "John Doe",
    "username": "john",
    "email": "john@email.com",
    "tel": "0881235678",
    "role": "1",
    "updated_at": "2024-05-24T11:28:09.000000Z",
    "created_at": "2024-05-24T11:28:09.000000Z",
    "id": 1
  }
}

การ login
---
http://localhost:8000/api/login

{
    "email":"john@email.com",
    "password":"12345678"
}

ผลลัพธ์ที่ควรได้กลับมา
---
{
  "status": true,
  "message": "Login successfully",
  "user": {
    "id": 1,
    "fullname": "John Doe",
    "username": "john",
    "email": "john@email.com",
    "email_verified_at": null,
    "tel": "0881235678",
    "avatar": null,
    "role": 1,
    "created_at": "2024-05-24T11:28:09.000000Z",
    "updated_at": "2024-05-24T11:28:09.000000Z"
  },
  "token": "2|PMZLAaTCBgvIBkxVK7y3ZcxLHpqk9rETmQmoWUVle5e2e9c7"
}

Step 16: แก้ไข Product Controller ที่ไฟล์ app/Http/Controllers/ProductController.php

<?php

namespace App\Http\Controllers;

use App\Models\Product;
use Illuminate\Http\Request;

class ProductController extends Controller
{
    // อ่านรายการสินค้าทั้งหมด
    public function index()
    {
        // Read all products
        return Product::all();
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        // เช็คสิทธิ์ (role) ว่าเป็น admin (1) 
        $user = auth()->user();

        if ($user->tokenCan("1")) {

            // Validate form
            $request->validate([
                'name' => 'required|min:3',
                'slug' => 'required',
                'price' => 'required'
            ]);

            // กำหนดตัวแปรรับค่าจากฟอร์ม
            $data_product = array(
                'name' => $request->input('name'),
                'description' => $request->input('description'),
                'slug' => $request->input('slug'),
                'price' => $request->input('price'),
                'user_id' => $user->id
            );

            // Create data to tabale product
            $product = Product::create($data_product);

            $response = [
                'status' => true,
                'message' => "Product created successfully",
                'product' => $product,
            ];

            return response($response, 201);

        } else {
            return response([
                'status' => false,
                'message' => 'Permission denied to create'
            ], 401);
        }
    }

    /**
     * Display the specified resource.
     *
     * @param  int $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $product = Product::find($id);

        if ($product) {
            return response([
                'status' => true,
                'product' => $product
            ]);
        } else {
            return response([
                'status' => false,
                'message' => 'Product not found'
            ], 404);
        }
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        // เช็คสิทธิ์ (role) ว่าเป็น admin (1) 
        $user = auth()->user();

        if ($user->tokenCan("1")) {

            $request->validate([
                'name' => 'required',
                'slug' => 'required',
                'price' => 'required'
            ]);

            $data_product = array(
                'name' => $request->input('name'),
                'description' => $request->input('description'),
                'slug' => $request->input('slug'),
                'price' => $request->input('price'),
                'user_id' => $user->id
            );

            $product = Product::find($id);
            $product->update($data_product);

            return response([
                'status' => true,
                'message' => 'Product updated successfully',
                'product' => $product
            ]);

        } else {
            return response([
                'status' => false,
                'message' => 'Permission denied to create'
            ], 401);
        }
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {

        // เช็คสิทธิ์ (role) ว่าเป็น admin (1) 
        $user = auth()->user();

        if ($user->tokenCan("1")) {

            $product = Product::destroy($id);

            if ($product) {
                return response([
                    'status' => true,
                    'message' => 'Product deleted successfully'
                ]);
            } else {
                return response([
                    'status' => false,
                    'message' => 'Product not found'
                ], 404);
            }
            
        } else {
            return response([
                'status' => false,
                'message' => 'Permission denied to create'
            ], 401);
        }

    }
}

Step 17: แก้ไขไฟล์ src\routes\api.php เพิ่ม routes
</>
<?php

use Illuminate\Support\Facades\Route;
use App\Http\Controllers\AuthController;
use App\Http\Controllers\ProductController;

// Route for register and login
Route::post('register',[AuthController::class, 'register']);
Route::post('login',[AuthController::class, 'login']);

Route::group(['middleware' => 'auth:sanctum'], function(){
    Route::post('refreshtoken', [AuthController::class, 'refreshToken']);
    Route::post('logout',[AuthController::class, 'logout']);
    Route::resource('products', ProductController::class);
});


Step 18: ทดสอบเรียกใช้ product api
</>

http://localhost:8000/api/products

Auth Bearer
--
6|FJqk9koWF45l9HyBpSMDcqMAJVpB66k4stuSWWy871b75c9e

ผลลัพธ์ที่ควรได้กลับมา
---
Status: 200 OK
[]

Step 19: ทดสอบเพิ่มข้อมูลใน API products
---
http://localhost:8000/api/products

Auth Bearer
--
Bearer 2|quRW74msH7dPP48SAD4rnuPEZ8bNN5suZf9XXHnH

HTTP Method: POST

Body:
{
    "name": "iPhone 12 Pro Max",
    "slug": "iphone-12-pro-max",
    "price": "38500.00",
    "category_id": "1",
    "description": "iPhone 12 Pro Max detail"
}

ผลลัพธ์ที่ควรได้กลับมา
---
Status: 201 OK

{
  "status": true,
  "message": "Product created successfully",
  "product": {
    "name": "iPhone 13 Pro Max",
    "description": "iPhone 13 Pro Max detail",
    "slug": "iphone-13-pro-max",
    "price": "48500.00",
    "user_id": 1,
    "updated_at": "2024-05-24T11:55:38.000000Z",
    "created_at": "2024-05-24T11:55:38.000000Z",
    "id": 2
  }
}

Step 20: ทดสอบเรียก API products สำหรับการแก้ไข
---

http://localhost:8000/api/products/1

Auth Bearer
--
Bearer 2|quRW74msH7dPP48SAD4rnuPEZ8bNN5suZf9XXHnH

HTTP Method: PUT

Body:
{
    "name": "iPad Pro 2024",
    "slug": "ipad-pro-2024",
    "description": "iPad Pro 2024 detail",
    "price": "45000.00"
}

Step 21: ทดสอบเรียก API products สำหรับการลบ
---

http://localhost:8100/api/products/1

Auth Bearer
--
Bearer 2|quRW74msH7dPP48SAD4rnuPEZ8bNN5suZf9XXHnH

HTTP Method: DELETE

Step 22: การติดตั้ง Document API (Swagger)
---
Install Swagger
---
💻 composer require darkaonline/l5-swagger

Publish Config File
---
💻 php artisan vendor:publish --provider "L5Swagger\L5SwaggerServiceProvider"

Generate Swagger Document
---
💻 php artisan l5-swagger:generate

Example annotations
---
/**
 * @OA\Info(
 *    title="Your super  ApplicationAPI",
 *    version="1.0.0",
 * )
 */

# REGISTER API #

/**
* @OA\Post(
* path="/api/register",
* operationId="Register",
* tags={"Register"},
* summary="User Register",
* description="User Register here",
*     @OA\RequestBody(
*         @OA\JsonContent(),
*         @OA\MediaType(
*            mediaType="multipart/form-data",
*            @OA\Schema(
*               type="object",
*               required={"name","email", "password", "password_confirmation"},
*               @OA\Property(property="name", type="text"),
*               @OA\Property(property="email", type="text"),
*               @OA\Property(property="password", type="password"),
*               @OA\Property(property="password_confirmation", type="password")
*            ),
*        ),
*    ),
*      @OA\Response(
*          response=201,
*          description="Register Successfully",
*          @OA\JsonContent()
*       ),
*      @OA\Response(
*          response=200,
*          description="Register Successfully",
*          @OA\JsonContent()
*       ),
*      @OA\Response(
*          response=422,
*          description="Unprocessable Entity",
*          @OA\JsonContent()
*       ),
*      @OA\Response(response=400, description="Bad request"),
*      @OA\Response(response=404, description="Resource Not Found"),
* )
*/

# LOGIN API #

/**
* @OA\Post(
*     path="/api/login",
*     operationId="Login",
*     tags={"Login"},
*     summary="User Login",
*     description="User Login here",
*     @OA\RequestBody(
*         required=true,
*         @OA\MediaType(
*            mediaType="multipart/form-data",
*            @OA\Schema(
*               type="object",
*               required={"email", "password"},
*               @OA\Property(property="email", type="string", example="sanjay@gmail.com"),
*               @OA\Property(property="password", type="string", example="123456"),
*            ),
*        ),
*        @OA\MediaType(
*            mediaType="application/json",
*            @OA\Schema(
*               type="object",
*               required={"email", "password"},
*               @OA\Property(property="email", type="string", example="sanjay@gmail.com"),
*               @OA\Property(property="password", type="string", example="123456"),
*            ),
*        ),
*    ),
*    @OA\Response(
*        response=201,
*        description="Login Successfully",
*        @OA\JsonContent()
*    ),
*    @OA\Response(
*        response=200,
*        description="Login Successfully",
*        @OA\JsonContent()
*    ),
*    @OA\Response(
*        response=422,
*        description="Unprocessable Entity",
*        @OA\JsonContent()
*    ),
*    @OA\Response(response=400, description="Bad request"),
*    @OA\Response(response=404, description="Resource Not Found"),
* )
*/

Step 23: ทดสอบเรียกใช้ Document API (Swagger)
---
http://localhost:8000/api/documentation

Step 24: Clone Project from Github
---
💻 git clone https://github.com/iamsamitdev/laravel11-store-api-finished laravel-store-api-app

Step 25: ติดตั้ง Composer
---
💻 composer install

Step 26: สร้าง .env จาก .env.example
---
💻 cp .env.example .env

Step 27: สร้าง Key สำหรับ Laravel
---
💻 php artisan key:generate

Step 28: ทำการ Migrate ฐานข้อมูล
---
💻 php artisan migrate

Step 29: ทำการ Seed ข้อมูล
---
💻 php artisan db:seed

Step 30: ทดสอบรันโปรเจ็กต์
---
💻 php artisan serve

🚀 4.Deploy Laravel Project to cloud

Step 31: ติดตั้ง vercel cli
---
💻 npm i -g vercel@latest

Step 32: เช็ค vercel cli
---
💻 vercel --version

Step 33: ล็อกอิน vercel

แก้ไฟล์ l5-swagger.php
---
'use_absolute_path' => env('L5_SWAGGER_USE_ABSOLUTE_PATH', false),

แก้ไฟล์ AppServiceProvider.php
---
use Illuminate\Support\Facades\URL;
public function boot(): void
    {
        if($this->app->environment('production')) {
            URL::forceScheme('https');
        }
    }

แก้ไขไฟล์ .htaccess
---
# Send Requests To API Front Controller...
    RewriteRule ^api/.*$ /api/index.php [L]

-------------------------------------------------------
⚡ DAY 3
1.What new in Vue 3
2.Setup Vue 3 Project
3.Vue 3 Composition API
4.Consuming REST API in Vue 3
-------------------------------------------------------
🚀 1.What new in Vue 3

🚀 2.Setup Vue 3 Project

Step 1: Install Vite in Global
---
💻 npm install -g vite

Step 2: Create new Vite Project with Vue
---
💻 npm create vite@latest
or
💻 yarn create vite

กำหนดชื่อโปรเจ็กต์เป็น "vue-stock-app"

Step 3: เปิดโปรเจ็กต์เข้า VS Code
---
code vue-stock-app -r

Step 4: Install node module in Vite Project
---
💻 npm install

Step 5: Run Project Vite with Vue
---
💻 npm run dev

or Run with host Project Vite with Vue
---
💻 npm run dev --  --host

Step 6: Install Tailwind CSS 3
---
💻 npm install -D tailwindcss postcss autoprefixer

Step 7: Generate Config Tailwind and PostCSS file
---
💻 npx tailwindcss init -p

Step 8: Config tailwind template paths
---
content: [
    "./index.html",
    "./src/**/*.{vue,js,ts,jsx,tsx}",
],

Step 9: Add Tailwind direactives to your CSS
Create src/tailwind/app.css
---
@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+Thai:wght@300;400;500&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

Step 10: Import tailwind css in main.ts
---
// Tailwind CSS
import './tailwind/app.css'
import './style.css'

ทดสอบใช้ Tailwind ที่ไฟล์ App.vue

<script setup lang="ts">

</script>

<template>

  <div class="flex justify-center items-center h-screen">
    <h1 class="text-4xl text-green-600 font-bold text-center animate-pulse">Hello Vue 3 + Vite + Tailwind CSS</h1>
  </div>
  
</template>

<style scoped>

</style>

Step 11: Install Vue Router
---
💻 npm install vue-router@4

Step 12: Vite Config path file to src
---
import { fileURLToPath, URL } from 'node:url'

import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [vue()],
  resolve: {
    alias: {
      '@': fileURLToPath(new URL('./src', import.meta.url))
    }
  }
})

Step 13: install @types/node
---
💻 npm install -D @types/node

Step 14: สร้าง component ส่วน frontend "Foot.vue" , "Nav.vue"
---
Nav.vue
---
<script setup lang="ts">

</script>

<template>
    <div>
        <h1>MENU</h1>
    </div>
</template>

<style scoped>

</style>

Foot.vue
---
<script setup lang="ts">

</script>

<template>
    <div>
        <h1>Footer</h1>
    </div>
</template>

<style scoped>

</style>

Step 15: สร้าง FrontendLayout.vue ไว้ใน folder "layouts"
---
<script setup lang="ts">

    import Nav from '@/components/frontend/Nav.vue'
    import Foot from '@/components/frontend/Foot.vue'

</script>

<template>
    <div>
        <Nav />
        <main>
            <router-view />
        </main>
        <Foot />
    </div>
</template>


<style scoped>

</style>

Step 16: สร้าง router ชื่อไฟล์ index.vue ไว้ในโฟลเดอร์ src/router/index.ts
---
import { createRouter, createWebHistory, RouteRecordRaw } from "vue-router"
import FrontendLayout from "@/layouts/FrontendLayout.vue"
import Home from "@/views/frontend/Home.vue"

const routes: Array<RouteRecordRaw> = [
  // Frontend Route
  {
    // เรียกตัว Frontend Layout (แม่)
    path: "/",
    name: "Frontend",
    component: FrontendLayout,

    // เรียกตัวลูกมาใส่
    children: [
      {
        path: "",
        name: "Home",
        component: Home,
        meta: {
          title: "Home",
        },
      },
    ],
  },
]

const router = createRouter({
  history: createWebHistory(import.meta.env.URL),
  routes,
})

export default router

Step 17: แก้ไขไฟล์ main.ts
---
import { createApp } from 'vue'
import router from './router/index'
import App from './App.vue'

// Tailwind CSS
import './tailwind/app.css'
import './style.css'

const app = createApp(App)
app.use(router)
app.mount('#app')

Step 18: แก้ไขไฟล์ App.vue
---
<script setup lang="ts">

</script>

<template>
  <RouterView />
</template>

<style scoped>

</style>


โครงสร้างโปรเจ็กต์ vue-stock-app
===============================
vue-stock-app
+---.vscode
+---public
|       
\---src
    |   App.vue
    |   main.ts
    |   vite-env.d.ts
    +---assets  
    +---components
    |   +---backend
    |   \---frontend
    |          Foot.vue
    |          Nav.vue
    +---layouts
    |       FrontendLayout.vue
    +---router
    |       index.ts
    +---tailwind
    |       app.css
    |       custom.css
    \---views
        +---backend
        \---frontend
                About.vue          
                Contact.vue       
                ForgotPassword.vue       
                Home.vue       
                Login.vue      
	Portfolio.vue
	Register.vue
	Service.vue
|   .env
|   .env.development
|   .env.production
|   .eslintrc.json
|   .gitignore
|   .prettierrc
|   index.html
|   package-lock.json
|   package.json
|   postcss.config.cjs
|   README.md
|   tailwind.config.cjs
|   tree.txt
|   tsconfig.json
|   tsconfig.node.json
|   vite.config.ts

-------------------------------------------------------
⚡ DAY 4
1.Authentication in Vue 3
2.CRUD in Vue 3 with Laravel API
3.Deploy Vue 3 Project to cloud
-------------------------------------------------------
🚀 1. Authentication in Vue 3

Step 1: ติดตั้ง library "Vuelidate"
---
npm install @vuelidate/core @vuelidate/validators

Step 2: ติดตั้ง library "Axios"
---
npm install axios

Step 3: สร้างไฟล์ .env, .env.development และ .env.production
---
.env
---
VITE_APP_TITLE=Vue Stock App

.env.development
---
VITE_APP_URL=/
VITE_APP_URL_API=https://geniusdevlab.com/laravelstoreapp/api/

.env.production
---
VITE_APP_URL=/vuestoreapp
VITE_APP_URL_API=https://geniusdevlab.com/laravelstoreapp/api/

Step 4: แก้ไขหน้า login ทำ validation form
---
<script setup lang="ts">

import { ref } from 'vue'

// Import VueValidates
import { useVuelidate } from '@vuelidate/core'
import { required, email, minLength, helpers } from '@vuelidate/validators'

// สร้างตัวแปร loading เพื่อใช้ในการแสดง Loading
const loading = ref(false)

// กำหนดค่าเริ่มต้น
const formData = ref({
  email: '',
  password: ''
})

// กำหนดกฎการตรวจสอบข้อมูล
const rules = {
  email: {
    required: helpers.withMessage('กรุณากรอกอีเมล์', required),
    email: helpers.withMessage('กรุณากรอกอีเมล์ให้ถูกต้อง', email)
  },
  password: {
    required: helpers.withMessage('กรุณากรอกรหัสผ่าน', required),
    minLength: helpers.withMessage('กรุณากรอกรหัสผ่านอย่างน้อย 6 ตัวอักษร', minLength(6))
  }
}

// กำหนดค่าเริ่มต้นให้กับ Vuelidate
const v$ = useVuelidate(rules, formData)

const handleSubmit = () => {

  v$.value.$touch()

  // ตรวจสอบข้อมูลถูกต้อง
  if (!v$.value.$error) {

    // เปิด Loading
    loading.value = true

    // แสดงข้อมูลที่กรอก
    console.log(formData.value)

    // ส่งข้อมูลไปยัง API
    // ในที่นี้จะใช้ setTimeout แทนการเรียกใช้งาน API จริง
    setTimeout(() => {

      // ปิด Loading
      loading.value = false

      // แสดงข้อความเมื่อเข้าสู่ระบบสำเร็จ
      alert('เข้าสู่ระบบสำเร็จ')

    }, 2000)

  }
}



</script>

<template>
  <div class="flex items-center min-h-screen p-6 pt-32 bg-gray-50 dark:bg-gray-900">
    <div class="flex-1 h-full max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-xl dark:bg-gray-800">
      <div class="flex flex-col overflow-y-auto md:flex-row">
        <div class="h-32 md:h-full md:w-1/2">
          <img aria-hidden="true"
            class="object-cover w-full h-full dark:block"
            src="@/assets/img/login-office.webp"
            alt="Office" />
        </div>

        <div class="flex items-center justify-center p-6 sm:p-12 md:w-1/2">

          <div class="w-full">

            <h1 class="mb-4 text-xl font-semibold dark:text-gray-200">เข้าสู่ระบบ</h1>

            <form @submit.prevent="handleSubmit">

              <!-- Email -->
              <label class="block mt-3 mb-2 text-sm dark:text-gray-200"
                for="email">อีเมล์</label>
              <input 
                v-model="formData.email"
                :class="{ 'border-red-600': v$.email.$errors.length}"
                class="w-full px-3 py-2 leading-tight text-gray-700  border rounded shadow appearance-none"
                type="text"
                id="email"
                name="email">
                <div v-for="error of v$.email.$errors" :key="error.$uid">
                  <div class="text-sm mt-2 text-red-700">{{ error.$message }}</div>
                </div>

              <!-- password -->
              <label class="block mt-3 mb-2 text-sm dark:text-gray-200"
                for="password">รหัสผ่าน</label>
              <input
                v-model="formData.password"
                :class="{ 'border-red-600': v$.password.$errors.length }"
                class="w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none"
                type="password"
                id="password"
                name="password">
                <div v-for="error of v$.password.$errors" :key="error.$uid">
                  <div class="text-sm mt-2 text-red-700">{{ error.$message }}</div>
                </div>

              <p class="my-4"></p>

              <button
                class="w-full px-4 py-2 mt-4 text-sm font-medium leading-5 text-center text-white transition-colors duration-150 bg-purple-600 border border-transparent rounded-lg cursor-pointer active:bg-purple-600 hover:bg-purple-700 flex items-center justify-center"
                type="submit"
                :disabled="loading"
              >
                <span v-if="loading" class="flex items-center">
                  <svg class="animate-spin w-5 h-5 mr-2"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24">
                    <circle class="opacity-25"
                      cx="12"
                      cy="12"
                      r="10"
                      stroke="currentColor"
                      stroke-width="4"></circle>
                    <path class="opacity-75"
                      fill="currentColor"
                      d="M4 12a8 8 0 018-8V0c4.418 0 8 3.582 8 8s-3.582 8-8 8V4a4 4 0 00-4-4"></path>
                  </svg>
                </span>
                {{ loading ? 'กำลังเข้าสู่ระบบ...' : 'เข้าสู่ระบบ' }}
              </button>

            </form>

            <p class="my-8"></p>

            <button
              class="flex items-center justify-center w-full px-4 py-2 text-sm font-medium leading-5 transition-colors duration-150 border border-gray-300 rounded-lg dark:text-gray-400 active:bg-transparent hover:border-gray-500 focus:border-gray-500 active:text-gray-500 focus:outline-none focus:shadow-outline-gray">
              <svg class="w-4 h-4 mr-2"
                aria-hidden="true"
                viewBox="0 0 24 24"
                fill="currentColor">
                <path
                  d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12" />
              </svg>
              Github
            </button>
            <button
              class="flex items-center justify-center w-full px-4 py-2 mt-4 text-sm font-medium leading-5 transition-colors duration-150 border border-gray-300 rounded-lg dark:text-gray-400 active:bg-transparent hover:border-gray-500 focus:border-gray-500 active:text-gray-500 focus:outline-none focus:shadow-outline-gray">
              <svg class="w-4 h-4 mr-2"
                aria-hidden="true"
                viewBox="0 0 24 24"
                fill="currentColor">
                <path
                  d="M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z" />
              </svg>
              Twitter
            </button>

            <p class="mt-4">
              <router-link to="/forgotpassword"
                class="text-sm font-medium text-purple-600 dark:text-purple-400 hover:underline">
                ฉันลืมรหัสผ่าน
              </router-link>
            </p>
            <p class="mt-1">
              <router-link to="/register"
                class="text-sm font-medium text-purple-600 dark:text-purple-400 hover:underline">
                สมัครสมาชิกใหม่
              </router-link>
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<style scoped></style>


Step 5: ติดตั้ง Sweet Alert
---
npm install vue-sweetalert2

และ config ที่ไฟล์ main.ts
---
// Vue Sweetalert2
import VueSweetalert2 from 'vue-sweetalert2'
import 'sweetalert2/dist/sweetalert2.min.css'

app.use(VueSweetalert2)

Step 6: สร้าง AuthService.ts ในโฟลเดอร์ services
---
import axios from "axios"

// อ่าน token จาก localStorage
const token = localStorage.getItem('token') || ''

const backendService = axios.create({
    baseURL: import.meta.env.VITE_APP_URL_API,
    withCredentials: false,
    headers: {
      'Content-Type':'application/json',
      'Authorization': 'Bearer ' + token // ใส่ token ไปด้วยก่อนส่งไปที่ backend ทุกครั้ง
    }
})

const authService = axios.create({
  baseURL: import.meta.env.VITE_APP_URL_API,
  withCredentials: false,
  headers: {
    "Content-Type": "application/json",
  },
})

// Login function
function login(email: string, password: string) {
  return authService.post("login", {
    email: email,
    password: password,
  })
}

// Register function
function register(
  fullname: string,
  username: string,
  email: string,
  password: string,
  password_confirmation: string,
  tel: string,
  role: string
) {
  return authService.post("register", {
    fullname: fullname,
    username: username,
    email: email,
    password: password,
    password_confirmation: password_confirmation,
    tel: tel,
    role: role,
  })
}

// Logout function
function logout() {
    return backendService.post("logout")
}

export {
    login,
    register,
    logout
}

export default authService

Step 7: แก้ไขหน้า Login เรียกผ่าน API
---
import Swal from 'sweetalert2'

 // Import AuthService
import http from '@/services/AuthService'

// ส่งข้อมูลไปยัง API
    http.post('login', 
      {
        email: formData.value.email,
        password: formData.value.password
      }
    ).then(response => {
      // ปิด Loading
      loading.value = false

      // ถ้าเข้าสู่ระบบสำเร็จ
      if (response.data.status === true) {
       
        let timerInterval:unknown = 0
          Swal.fire({
              title: 'เข้าสู่ระบบสำเร็จ',
              icon: 'success',
              html: 'กำลังเข้าสู่หน้า dashboard ใน <b></b> วินาที.',
              timer: 2000,
              timerProgressBar: true,
              didOpen: () => {
                Swal.showLoading()
                const b = Swal.getHtmlContainer()!.querySelector('b')
                timerInterval = setInterval(() => {
                  b!.textContent = Swal.getTimerLeft() as unknown as string
                }, 100)
              },
              willClose: () => {
                clearInterval(timerInterval as number)
              }
          }).then((result) => {
              if (result.dismiss === Swal.DismissReason.timer) {
                  // ส่งไปหน้า dashboard
                    // บันทึกข้อมูลลง LocalStorage
                  localStorage.setItem('user', JSON.stringify(response.data.user))
                  localStorage.setItem('token', response.data.token)
                  
                  // ส่งไปหน้า Profile
                  window.location.href = '/backend'
              }
          })        

        
      } else {
        loading.value = false
        Swal.fire(
            'เข้าสู่ระบบไม่สำเร็จ',
            'กรุณาตรวจสอบข้อมูลให้ถูกต้อง',
            'error'
        )
      }
       
    }).catch(error => {
      loading.value = false
      console.log(error)
      Swal.fire(
          'เข้าสู่ระบบไม่สำเร็จ',
          'กรุณาตรวจสอบข้อมูลให้ถูกต้อง',
          'error'
      )
    })

Step 8: แก้ไขหน้า Register.vue
---
<script setup lang="ts">

import { computed, ref } from 'vue'

// Import VueValidates
import { useVuelidate } from '@vuelidate/core'
import { required, email, minLength, sameAs, helpers } from '@vuelidate/validators'
import Swal from 'sweetalert2'

 // Import AuthService
import http from '@/services/AuthService'
import router from '@/router'

// สร้างตัวแปร loading เพื่อใช้ในการแสดง Loading
const loading = ref(false)

// กำหนดค่าเริ่มต้น
const formData = ref({
  fullname: '',
  username: '',
  email: '',
  mobile: '',
  password: '',
  confirm_password: ''
})

// กำหนดกฎการตรวจสอบข้อมูล
const rules = {
  fullname: {
    required: helpers.withMessage('กรุณากรอกชื่อ-สกุล', required),
    minLength: helpers.withMessage('กรุณากรอกชื่อ-สกุลอย่างน้อย 3 ตัวอักษร', minLength(3))
  },
  username: {
    required: helpers.withMessage('กรุณากรอกชื่อผู้ใช้', required),
    minLength: helpers.withMessage('กรุณากรอกชื่อผู้ใช้อย่างน้อย 3 ตัวอักษร', minLength(3))
  },
  email: {
    required: helpers.withMessage('กรุณากรอกอีเมล์', required),
    email: helpers.withMessage('กรุณากรอกอีเมล์ให้ถูกต้อง', email)
  },
  mobile: {
    required: helpers.withMessage('กรุณากรอกเบอร์โทรศัพท์', required),
    minLength: helpers.withMessage('กรุณากรอกเบอร์โทรศัพท์อย่างน้อย 10 ตัวอักษร', minLength(10))
  },
  password: {
    required: helpers.withMessage('กรุณากรอกรหัสผ่าน', required),
    minLength: helpers.withMessage('กรุณากรอกรหัสผ่านอย่างน้อย 6 ตัวอักษร', minLength(6))
  },
  confirm_password: {
    required: helpers.withMessage('กรุณายืนยันรหัสผ่าน', required),
    sameAs: helpers.withMessage('รหัสผ่านไม่ตรงกัน', sameAs(computed(()=> formData.value.password)))
  }
}

// กำหนดค่าเริ่มต้นให้กับ Vuelidate
const v$ = useVuelidate(rules, formData)

const handleSubmit = () => {

  v$.value.$touch()

  // ตรวจสอบข้อมูลถูกต้อง
  if (!v$.value.$error) {

    // เปิด Loading
    loading.value = true

    // แสดงข้อมูลที่กรอก
    console.log(formData.value)

    // return false

    // ส่งข้อมูลไปยัง API
    http.post('register', 
      {
        fullname: formData.value.fullname,
        username: formData.value.username,
        email: formData.value.email,
        password: formData.value.password,
        password_confirmation: formData.value.confirm_password,
        tel: formData.value.mobile,
        role: '1'
      }
    ).then(response => {
      // ปิด Loading
      loading.value = false

      // ถ้าลงทะเบียนสำเร็จ
      if (response.data.status === true) {
        // แสดงข้อความสำเร็จ
        Swal.fire({
          icon: 'success',
          title: 'สำเร็จ',
          text: 'สมัครสมาชิกสำเร็จ',
          showConfirmButton: false,
          timer: 1500
        })

        // ล้างข้อมูลในฟอร์ม
        formData.value = {
          fullname: '',
          username: '',
          email: '',
          mobile: '',
          password: '',
          confirm_password: ''
        }

        // ส่งไปหน้า Login
        setTimeout(() => {
          router.push({ name: 'Login' })
        }, 1500)
        
      }

    }).catch(error => {
      // ปิด Loading
      loading.value = false

      // แสดงข้อความ Error
      Swal.fire({
        icon: 'error',
        title: 'เกิดข้อผิดพลาด',
        text: error.response.data.message
      })
    })
  }
}


</script>

<template>
    <div class="flex items-center min-h-screen p-6 pt-32 bg-gray-50 dark:bg-gray-900">
      <div class="flex-1 h-full max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-xl dark:bg-gray-800">
        <div class="flex flex-col overflow-y-auto md:flex-row">
          <div class="h-32 md:h-auto md:w-1/2">
            <img
              aria-hidden="true"
              class="object-cover w-full h-full"
              src="@/assets/img/create-account-office.webp"
              alt="Office"/>
          </div>

          <div class="flex items-center justify-center p-6 sm:p-12 md:w-1/2">
            
            <div class="w-full">

              <h1 class="mb-4 text-xl font-semibold dark:text-gray-200">สมัครสมาชิกใหม่</h1>

              <form @submit.prevent="handleSubmit">

                <label class="block mb-2 text-sm  dark:text-gray-200" for="fullname">ชื่อ-สกุล</label>
                <input 
                  v-model="formData.fullname"
                  :class="{ 'border-red-500': v$.$dirty && v$.fullname.$error }"
                  class="w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none" 
                  id="fullname" 
                  name="fullname" 
                  type="text">
                <div v-for="error of v$.fullname.$errors" :key="error.$uid">
                  <div class="text-sm mt-2 text-red-700">{{ error.$message }}</div>
                </div>
                
                <label class="block mt-3 mb-2 text-sm dark:text-gray-200" for="username">ชื่อผู้ใช้</label>
                <input 
                  v-model="formData.username"
                  :class="{ 'border-red-500': v$.$dirty && v$.username.$error }"
                  class="w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none" 
                  id="username" 
                  name="username" 
                  type="text">
                <div v-for="error of v$.username.$errors" :key="error.$uid">
                  <div class="text-sm mt-2 text-red-700">{{ error.$message }}</div>
                </div>

                <label class="block mt-3 mb-2 text-sm dark:text-gray-200" for="email">อีเมล์</label>
                <input 
                  v-model="formData.email"
                  :class="{ 'border-red-500': v$.$dirty && v$.email.$error }"
                  class="w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none" 
                  id="email" 
                  name="email" 
                  type="text">
                <div v-for="error of v$.email.$errors" :key="error.$uid">
                  <div class="text-sm mt-2 text-red-700">{{ error.$message }}</div>
                </div>

                <label class="block mt-3 mb-2 text-sm dark:text-gray-200" for="mobile">เบอร์โทรศัพท์</label>
                <input 
                  v-model="formData.mobile"
                  :class="{ 'border-red-500': v$.$dirty && v$.mobile.$error }"
                  class="w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none" 
                  id="mobile" 
                  name="mobile" 
                  type="text">
                <div v-for="error of v$.mobile.$errors" :key="error.$uid">
                  <div class="text-sm mt-2 text-red-700">{{ error.$message }}</div>
                </div>

                <label class="block mt-3 mb-2 text-sm dark:text-gray-200" for="password">รหัสผ่าน</label>
                <input 
                  v-model="formData.password"
                  :class="{ 'border-red-500': v$.password.$error }"
                  class="w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none" 
                  id="password" 
                  name="password" 
                  type="password">
                <div v-for="error of v$.password.$errors" :key="error.$uid">
                  <div class="text-sm mt-2 text-red-700">{{ error.$message }}</div>
                </div>
    
                <label class="block mt-3 mb-2 text-sm dark:text-gray-200" for="confirm_password">ยืนยันรหัสผ่าน</label>
                <input 
                  v-model="formData.confirm_password"
                  :class="{ 'border-red-500': v$.confirm_password.$error }"
                  class="w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none" 
                  id="confirm_password" 
                  name="confirm_password" 
                  type="password">
                <div v-for="error of v$.confirm_password.$errors" :key="error.$uid">
                  <div class="text-sm mt-2 text-red-700">{{ error.$message }}</div>
                </div>

                <p class="my-4"></p>

                <label class="flex items-center dark:text-gray-400">
                  <input type="checkbox" class="text-purple-600 form-checkbox focus:border-purple-400 focus:outline-none focus:shadow-outline-purple dark:focus:shadow-outline-gray"/>
                  <span class="ml-2">ฉันยอมรับ <span class="underline">เงื่อนไขการใช้งานระบบ</span>
                  </span>
                </label>
                
                <button
                  class="w-full px-4 py-2 mt-4 text-sm font-medium leading-5 text-center text-white transition-colors duration-150 bg-purple-600 border border-transparent rounded-lg cursor-pointer active:bg-purple-600 hover:bg-purple-700 flex items-center justify-center"
                  type="submit"
                  :disabled="loading"
                >
                  <span v-if="loading" class="flex items-center">
                    <svg class="animate-spin w-5 h-5 mr-2"
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24">
                      <circle class="opacity-25"
                        cx="12"
                        cy="12"
                        r="10"
                        stroke="currentColor"
                        stroke-width="4"></circle>
                      <path class="opacity-75"
                        fill="currentColor"
                        d="M4 12a8 8 0 018-8V0c4.418 0 8 3.582 8 8s-3.582 8-8 8V4a4 4 0 00-4-4"></path>
                    </svg>
                  </span>
                  {{ loading ? 'กำลังประมวลผล...' : 'สมัครสมาชิก' }}
                </button>                

              </form>

              <p class="my-8"></p>

              <button
                class="flex items-center justify-center w-full px-4 py-2 text-sm font-medium leading-5 transition-colors duration-150 border border-gray-300 rounded-lg dark:text-gray-400 active:bg-transparent hover:border-gray-500 focus:border-gray-500 active:text-gray-500 focus:outline-none focus:shadow-outline-gray">
                <svg
                  class="w-4 h-4 mr-2"
                  aria-hidden="true"
                  viewBox="0 0 24 24"
                  fill="currentColor">
                  <path
                    d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"
                  />
                </svg>
                Github
              </button>
              <button
                class="flex items-center justify-center w-full px-4 py-2 mt-4 text-sm font-medium leading-5 transition-colors duration-150 border border-gray-300 rounded-lg dark:text-gray-400 active:bg-transparent hover:border-gray-500 focus:border-gray-500 active:text-gray-500 focus:outline-none focus:shadow-outline-gray">
                <svg
                  class="w-4 h-4 mr-2"
                  aria-hidden="true"
                  viewBox="0 0 24 24"
                  fill="currentColor">
                  <path
                    d="M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z"/>
                </svg>
                Twitter
              </button>

              <p class="mt-2">
                <router-link to="/login" class="text-sm font-medium text-purple-600 dark:text-purple-400 hover:underline">
                  ฉันเป็นสมาชิกอยู่แล้ว ? เข้าสู่ระบบ
                </router-link>
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
</template>

Step 9: สร้าง Navbar, Sidebar ใน Backend component
---
Navbar.vue
---
<script setup lang="ts">
    import { ref } from 'vue'
    import { useRouter } from 'vue-router'

    const showProfileMenu = ref(false)
    const showNotificationMenu = ref(false)

    const router = useRouter()

    const onClickShowProfile = () => {
        showProfileMenu.value = !showProfileMenu.value
        showNotificationMenu.value = false
    }

    const onClickShowNotificationMenu = () => {
        showNotificationMenu.value = !showNotificationMenu.value
        showProfileMenu.value = false
    }

    const onClickLogout = () => {
        router.push({ name: 'Login' })
    }

    const onClickMobileMenu = () => {
        // Add logic for mobile menu if needed
    }

    const onClickProfile = () => {
        // Add logic for profile click
    }

    const onClickSetting = () => {
        // Add logic for settings click
    }

    const onclickMessage = () => {
        // Add logic for message click
    }

    const onclickSale = () => {
        // Add logic for sale click
    }

    const onclickAlert = () => {
        // Add logic for alert click
    }
</script>

<template>
    <header class="z-10 py-4 bg-white shadow-md dark:bg-gray-800">
        <div
            class="container flex items-center justify-between h-full px-6 mx-auto text-purple-600 dark:text-purple-300">
            <!-- Mobile hamburger -->
            <button @click="onClickMobileMenu"
                class="p-1 mr-5 -ml-1 rounded-md xl:hidden focus:outline-none focus:shadow-outline-purple">
                <svg class="w-6 h-6"
                    aria-hidden="true"
                    fill="currentColor"
                    viewBox="0 0 20 20">
                    <path fill-rule="evenodd"
                        d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z">
                    </path>
                </svg>
            </button>
            <!-- Search input -->
            <div class="flex justify-center flex-1 lg:mr-32"></div>
            <ul class="flex items-center flex-shrink-0 space-x-6">
                <!-- Notifications menu -->
                <li class="relative">
                    <button @click="onClickShowNotificationMenu"
                        class="relative align-middle rounded-md focus:outline-none focus:shadow-outline-purple"
                        aria-label="Notifications"
                        aria-haspopup="true">
                        <svg class="w-5 h-5"
                            aria-hidden="true"
                            fill="currentColor"
                            viewBox="0 0 20 20">
                            <path
                                d="M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z">
                            </path>
                        </svg>
                        <!-- Notification badge -->
                        <span aria-hidden="true"
                            class="absolute top-0 right-0 inline-block w-3 h-3 transform translate-x-1 -translate-y-1 bg-red-600 border-2 border-white rounded-full dark:border-gray-800"></span>
                    </button>
                    <template v-if="showNotificationMenu">
                        <ul
                            class="absolute right-0 w-56 p-2 mt-2 space-y-2 text-gray-600 bg-white border border-gray-100 rounded-md shadow-md dark:text-gray-300 dark:border-gray-700 dark:bg-gray-700">
                            <li class="flex">
                                <a @click="onclickMessage"
                                    class="inline-flex items-center justify-between w-full px-2 py-1 text-sm font-semibold transition-colors duration-150 rounded-md hover:bg-gray-100 hover:text-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-200"
                                    href="#">
                                    <span>Messages</span>
                                    <span
                                        class="inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-red-600 bg-red-100 rounded-full dark:text-red-100 dark:bg-red-600">13</span>
                                </a>
                            </li>
                            <li class="flex">
                                <a @click="onclickSale"
                                    class="inline-flex items-center justify-between w-full px-2 py-1 text-sm font-semibold transition-colors duration-150 rounded-md hover:bg-gray-100 hover:text-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-200"
                                    href="#">
                                    <span>Sales</span>
                                    <span
                                        class="inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-red-600 bg-red-100 rounded-full dark:text-red-100 dark:bg-red-600">2</span>
                                </a>
                            </li>
                            <li @click="onclickAlert"
                                class="flex">
                                <a
                                    class="inline-flex items-center justify-between w-full px-2 py-1 text-sm font-semibold transition-colors duration-150 rounded-md hover:bg-gray-100 hover:text-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-200">
                                    <span>Alerts</span>
                                </a>
                            </li>
                        </ul>
                    </template>
                </li>

                <!-- Profile menu -->
                <li class="relative">
                    <button @click="onClickShowProfile"
                        class="align-middle rounded-full focus:shadow-outline-purple focus:outline-none"
                        aria-label="Account"
                        aria-haspopup="true">
                        <img class="object-cover w-8 h-8 rounded-full"
                            src="https://images.unsplash.com/photo-1502378735452-bc7d86632805?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&s=aa3a807e1bbdfd4364d1f449eaa96d82"
                            alt=""
                            aria-hidden="true" />
                    </button>
                    <template v-if="showProfileMenu">
                        <ul class="absolute right-0 w-56 p-2 mt-2 space-y-2 text-gray-600 bg-white border border-gray-100 rounded-md shadow-md dark:border-gray-700 dark:text-gray-300 dark:bg-gray-700"
                            aria-label="submenu">
                            <li class="flex">
                                <a @click="onClickProfile"
                                    class="inline-flex items-center w-full px-2 py-1 text-sm font-semibold transition-colors duration-150 rounded-md hover:bg-gray-100 hover:text-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-200"
                                    href="#">
                                    <svg class="w-4 h-4 mr-3"
                                        aria-hidden="true"
                                        fill="none"
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        stroke-width="2"
                                        viewBox="0 0 24 24"
                                        stroke="currentColor">
                                        <path d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z">
                                        </path>
                                    </svg>
                                    <span>Profile</span>
                                </a>
                            </li>
                            <li class="flex">
                                <a @click="onClickSetting"
                                    class="inline-flex items-center w-full px-2 py-1 text-sm font-semibold transition-colors duration-150 rounded-md hover:bg-gray-100 hover:text-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-200"
                                    href="#">
                                    <svg class="w-4 h-4 mr-3"
                                        aria-hidden="true"
                                        fill="none"
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        stroke-width="2"
                                        viewBox="0 0 24 24"
                                        stroke="currentColor">
                                        <path
                                            d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z">
                                        </path>
                                        <path d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                    </svg>
                                    <span>Settings</span>
                                </a>
                            </li>
                            <li class="flex">
                                <a @click="onClickLogout"
                                    class="inline-flex items-center w-full px-2 py-1 text-sm font-semibold transition-colors duration-150 rounded-md hover:bg-gray-100 hover:text-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-200"
                                    href="#">
                                    <svg class="w-4 h-4 mr-3"
                                        aria-hidden="true"
                                        fill="none"
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        stroke-width="2"
                                        viewBox="0 0 24 24"
                                        stroke="currentColor">
                                        <path
                                            d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1">
                                        </path>
                                    </svg>
                                    <span>Log out</span>
                                </a>
                            </li>
                        </ul>
                    </template>
                </li>
            </ul>
        </div>
    </header>
</template>

<style lang="css" scoped></style>

Sidebar.vue
---
<script setup lang="ts">

</script>

<template>
    <!-- Desktop sidebar -->
    <aside class="z-20 flex-shrink-0 hidden w-64 overflow-y-auto bg-white dark:bg-gray-800 xl:block">
        <div class="py-4 text-gray-500 dark:text-gray-400">
            
            <router-link active-class="activemenulink" class="ml-6 text-lg font-bold text-gray-800 dark:text-gray-200" to="dashboard">
            Vue Stock
        </router-link>

            <ul class="mt-6">
            <li class="relative px-6 py-3">
   
                <router-link to="dashboard"
                class="inline-flex items-center w-full text-sm font-semibold transition-colors duration-150 hover:text-gray-800 dark:hover:text-gray-100">
                <svg
                    class="w-5 h-5"
                    aria-hidden="true"
                    fill="none"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    viewBox="0 0 24 24"
                    stroke="currentColor">
                    <path
                    d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"
                    ></path>
                </svg>
                <span class="ml-4">Dashboard</span>
                </router-link>
            </li>
            </ul>

            <ul>
            <li class="relative px-6 py-3">
                <router-link to="product"
                class="inline-flex items-center w-full text-sm font-semibold transition-colors duration-150 hover:text-gray-800 dark:hover:text-gray-100"
                href="forms.html">
                <svg
                    class="w-5 h-5"
                    aria-hidden="true"
                    fill="none"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    viewBox="0 0 24 24"
                    stroke="currentColor">
                    <path
                    d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"
                    ></path>
                </svg>
                <span class="ml-4">Products</span>
                </router-link>
            </li>
            </ul>     
            
        </div>
        </aside>

        <!-- Mobile sidebar -->
        <!-- Backdrop -->
        <aside class="fixed inset-y-0 z-20 flex-shrink-0 w-64 mt-16 overflow-y-auto bg-gray-100 dark:bg-gray-800 xl:hidden">
        <div class="py-4 text-gray-500 dark:text-gray-400">
            
            <a class="ml-6 text-lg font-bold text-gray-800 dark:text-gray-200" href="#">Vue Store</a>
            
            <ul class="mt-6">
            <li class="relative px-6 py-3">
                <span
                class="absolute inset-y-0 left-0 w-1 bg-purple-600 rounded-tr-lg rounded-br-lg"
                aria-hidden="true"></span>
                    <router-link to="dashboard" class="inline-flex items-center w-full text-sm font-semibold text-gray-800 transition-colors duration-150 hover:text-gray-800 dark:hover:text-gray-200 dark:text-gray-100" href="#">
                    <svg
                    class="w-5 h-5"
                    aria-hidden="true"
                    fill="none"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    viewBox="0 0 24 24"
                    stroke="currentColor">
                    <path
                    d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
                </svg>
                <span class="ml-4">Dashboard</span>
                </router-link>
            </li>
            </ul>

            <ul>
            <li class="relative px-6 py-3">
                <router-link to="product" class="inline-flex items-center w-full text-sm font-semibold transition-colors duration-150 hover:text-gray-800 dark:hover:text-gray-200">
                <svg
                    class="w-5 h-5"
                    aria-hidden="true"
                    fill="none"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                >
                    <path
                    d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"
                    ></path>
                </svg>
                <span class="ml-4">Products</span>
                </router-link>
            </li>
            </ul>
            
        </div>
    </aside>
</template>

<style lang="css">
  .router-link-active, .router-link-exact-active {
    color: aqua;
  }
</style>

Step 10: สร้าง BackendLayout.vue
---
<script setup lang="ts">
    import Navbar from '@/components/backend/Navbar.vue'
    import Sidebar from '@/components/backend/Sidebar.vue'
</script>

<template>
    <div class="flex h-screen bg-gray-50 dark:bg-gray-900">
        <Sidebar />
        <div class="flex flex-col flex-1 w-full">
            <Navbar />
            <main class="h-full overflow-y-auto">
                 <div class="container grid px-6 mx-auto">
                    <router-view></router-view>
                 </div>
            </main>
        </div>
    </div>
</template>

Step 11: สร้างหน้า Dashboard.vue ใน backend
---
<script setup lang="ts">
import { ref, onMounted } from 'vue'
import { Chart, registerables } from 'chart.js'

Chart.register(...registerables)

const chartData = {
  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
  datasets: [{
    label: 'Sales 2023 (M)',
    data: [65, 59, 80, 81, 56, 55, 40, 60, 70, 80, 90, 100],
  }],
};

const chartOptions = {
  scales: {
    y: {
      beginAtZero: true,
    },
  },
  responsive: false,
};

const chartRef = ref<HTMLCanvasElement | null>(null);

let myChart: Chart | null = null;

const colors = ['red', 'blue', 'green', 'orange', 'purple', 'cyan', 'magenta', 'yellow', 'brown', 'gray', 'brown', 'pink'];

onMounted(() => {
  if (chartRef.value) {
    myChart = new Chart(chartRef.value, {
      type: 'bar',
      data: {
        labels: chartData.labels,
        datasets: [{
          label: chartData.datasets[0].label,
          data: chartData.datasets[0].data,
          backgroundColor: colors,
        }],
      },
      options: chartOptions,
    });
  }
});

</script>

<template>
    <h2 class="my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200">
        Dashboard
    </h2>
    <!-- Cards -->
    <div class="grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4">

        <!-- Card -->
        <div class="flex items-center p-4 bg-white rounded-lg shadow-xs dark:bg-gray-800">
            <div class="p-3 mr-4 text-orange-500 bg-orange-100 rounded-full dark:text-orange-900">
                <svg class="w-5 h-5"
                    fill="currentColor"
                    viewBox="0 0 20 20">
                    <path
                        d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z">
                    </path>
                </svg>
            </div>
            <div>
                <p class="mb-2 text-sm font-medium text-gray-600 dark:text-gray-400">Total clients</p>
                <p class="text-lg font-semibold text-gray-700 dark:text-gray-200">6389</p>
            </div>
        </div>

        <!-- Card -->
        <div class="flex items-center p-4 bg-white rounded-lg shadow-xs dark:bg-gray-800">
            <div class="p-3 mr-4 text-green-500 bg-green-100 rounded-full dark:text-green-100 dark:bg-green-500">
                <svg class="w-5 h-5"
                    fill="currentColor"
                    viewBox="0 0 20 20">
                    <path fill-rule="evenodd"
                        d="M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z"
                        clip-rule="evenodd"></path>
                </svg>
            </div>
            <div>
                <p class="mb-2 text-sm font-medium text-gray-600 dark:text-gray-400">Account balance</p>
                <p class="text-lg font-semibold text-gray-700 dark:text-gray-200">$ 46,760.89</p>
            </div>
        </div>

        <!-- Card -->
        <div class="flex items-center p-4 bg-white rounded-lg shadow-xs dark:bg-gray-800">
            <div class="p-3 mr-4 text-blue-500 bg-blue-100 rounded-full dark:text-blue-100 dark:bg-blue-500">
                <svg class="w-5 h-5"
                    fill="currentColor"
                    viewBox="0 0 20 20">
                    <path
                        d="M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z">
                    </path>
                </svg>
            </div>
            <div>
                <p class="mb-2 text-sm font-medium text-gray-600 dark:text-gray-400">New sales</p>
                <p class="text-lg font-semibold text-gray-700 dark:text-gray-200">376</p>
            </div>
        </div>

        <!-- Card -->
        <div class="flex items-center p-4 bg-white rounded-lg shadow-xs dark:bg-gray-800">
            <div class="p-3 mr-4 text-teal-500 bg-teal-100 rounded-full dark:text-teal-100 dark:bg-teal-500">
                <svg class="w-5 h-5"
                    fill="currentColor"
                    viewBox="0 0 20 20">
                    <path fill-rule="evenodd"
                        d="M18 5v8a2 2 0 01-2 2h-5l-5 4v-4H4a2 2 0 01-2-2V5a2 2 0 012-2h12a2 2 0 012 2zM7 8H5v2h2V8zm2 0h2v2H9V8zm6 0h-2v2h2V8z"
                        clip-rule="evenodd"></path>
                </svg>
            </div>
            <div>
                <p class="mb-2 text-sm font-medium text-gray-600 dark:text-gray-400">Pending contacts</p>
                <p class="text-lg font-semibold text-gray-700 dark:text-gray-200">35</p>
            </div>
        </div>
    </div>

    <!-- พื้นที่สำหรับไว้แสดงกราฟ -->
    <canvas ref="chartRef" style="height: 300px; width: 100%;"></canvas>

    <!-- New Table -->
    <div class="w-full mt-9 overflow-hidden rounded-lg shadow-xs sm:hidden md:hidden lg:block">
        <div class="w-full overflow-x-auto">
            <table class="w-full whitespace-no-wrap">
                <thead>
                    <tr
                        class="text-xs font-semibold tracking-wide text-left text-gray-500 uppercase border-b dark:border-gray-700 bg-gray-50 dark:text-gray-400 dark:bg-gray-800">
                        <th class="px-4 py-3">Client</th>
                        <th class="px-4 py-3">Amount</th>
                        <th class="px-4 py-3">Status</th>
                        <th class="px-4 py-3">Date</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y dark:divide-gray-700 dark:bg-gray-800">
                    <tr class="text-gray-700 dark:text-gray-400">
                        <td class="px-4 py-3">
                            <div class="flex items-center text-sm">
                                <!-- Avatar with inset shadow -->
                                <div class="relative hidden w-8 h-8 mr-3 rounded-full md:block">
                                    <img class="object-cover w-full h-full rounded-full"
                                        src="https://images.unsplash.com/flagged/photo-1570612861542-284f4c12e75f?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&ixid=eyJhcHBfaWQiOjE3Nzg0fQ"
                                        alt=""
                                        loading="lazy" />
                                    <div class="absolute inset-0 rounded-full shadow-inner"
                                        aria-hidden="true"></div>
                                </div>
                                <div>
                                    <p class="font-semibold">Hans Burger</p>
                                    <p class="text-xs text-gray-600 dark:text-gray-400">
                                        10x Developer
                                    </p>
                                </div>
                            </div>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            $ 863.45
                        </td>
                        <td class="px-4 py-3 text-xs">
                            <span
                                class="px-2 py-1 font-semibold leading-tight text-green-700 bg-green-100 rounded-full dark:bg-green-700 dark:text-green-100">
                                Approved
                            </span>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            6/10/2020
                        </td>
                    </tr>

                    <tr class="text-gray-700 dark:text-gray-400">
                        <td class="px-4 py-3">
                            <div class="flex items-center text-sm">
                                <!-- Avatar with inset shadow -->
                                <div class="relative hidden w-8 h-8 mr-3 rounded-full md:block">
                                    <img class="object-cover w-full h-full rounded-full"
                                        src="https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&facepad=3&fit=facearea&s=707b9c33066bf8808c934c8ab394dff6"
                                        alt=""
                                        loading="lazy" />
                                    <div class="absolute inset-0 rounded-full shadow-inner"
                                        aria-hidden="true"></div>
                                </div>
                                <div>
                                    <p class="font-semibold">Jolina Angelie</p>
                                    <p class="text-xs text-gray-600 dark:text-gray-400">
                                        Unemployed
                                    </p>
                                </div>
                            </div>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            $ 369.95
                        </td>
                        <td class="px-4 py-3 text-xs">
                            <span
                                class="px-2 py-1 font-semibold leading-tight text-orange-700 bg-orange-100 rounded-full dark:text-white dark:bg-orange-600">
                                Pending
                            </span>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            6/10/2020
                        </td>
                    </tr>

                    <tr class="text-gray-700 dark:text-gray-400">
                        <td class="px-4 py-3">
                            <div class="flex items-center text-sm">
                                <!-- Avatar with inset shadow -->
                                <div class="relative hidden w-8 h-8 mr-3 rounded-full md:block">
                                    <img class="object-cover w-full h-full rounded-full"
                                        src="https://images.unsplash.com/photo-1551069613-1904dbdcda11?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&ixid=eyJhcHBfaWQiOjE3Nzg0fQ"
                                        alt=""
                                        loading="lazy" />
                                    <div class="absolute inset-0 rounded-full shadow-inner"
                                        aria-hidden="true"></div>
                                </div>
                                <div>
                                    <p class="font-semibold">Sarah Curry</p>
                                    <p class="text-xs text-gray-600 dark:text-gray-400">
                                        Designer
                                    </p>
                                </div>
                            </div>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            $ 86.00
                        </td>
                        <td class="px-4 py-3 text-xs">
                            <span
                                class="px-2 py-1 font-semibold leading-tight text-red-700 bg-red-100 rounded-full dark:text-red-100 dark:bg-red-700">
                                Denied
                            </span>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            6/10/2020
                        </td>
                    </tr>

                    <tr class="text-gray-700 dark:text-gray-400">
                        <td class="px-4 py-3">
                            <div class="flex items-center text-sm">
                                <!-- Avatar with inset shadow -->
                                <div class="relative hidden w-8 h-8 mr-3 rounded-full md:block">
                                    <img class="object-cover w-full h-full rounded-full"
                                        src="https://images.unsplash.com/photo-1551006917-3b4c078c47c9?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&ixid=eyJhcHBfaWQiOjE3Nzg0fQ"
                                        alt=""
                                        loading="lazy" />
                                    <div class="absolute inset-0 rounded-full shadow-inner"
                                        aria-hidden="true"></div>
                                </div>
                                <div>
                                    <p class="font-semibold">Rulia Joberts</p>
                                    <p class="text-xs text-gray-600 dark:text-gray-400">
                                        Actress
                                    </p>
                                </div>
                            </div>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            $ 1276.45
                        </td>
                        <td class="px-4 py-3 text-xs">
                            <span
                                class="px-2 py-1 font-semibold leading-tight text-green-700 bg-green-100 rounded-full dark:bg-green-700 dark:text-green-100">
                                Approved
                            </span>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            6/10/2020
                        </td>
                    </tr>

                    <tr class="text-gray-700 dark:text-gray-400">
                        <td class="px-4 py-3">
                            <div class="flex items-center text-sm">
                                <!-- Avatar with inset shadow -->
                                <div class="relative hidden w-8 h-8 mr-3 rounded-full md:block">
                                    <img class="object-cover w-full h-full rounded-full"
                                        src="https://images.unsplash.com/photo-1546456073-6712f79251bb?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&ixid=eyJhcHBfaWQiOjE3Nzg0fQ"
                                        alt=""
                                        loading="lazy" />
                                    <div class="absolute inset-0 rounded-full shadow-inner"
                                        aria-hidden="true"></div>
                                </div>
                                <div>
                                    <p class="font-semibold">Wenzel Dashington</p>
                                    <p class="text-xs text-gray-600 dark:text-gray-400">
                                        Actor
                                    </p>
                                </div>
                            </div>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            $ 863.45
                        </td>
                        <td class="px-4 py-3 text-xs">
                            <span
                                class="px-2 py-1 font-semibold leading-tight text-gray-700 bg-gray-100 rounded-full dark:text-gray-100 dark:bg-gray-700">
                                Expired
                            </span>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            6/10/2020
                        </td>
                    </tr>

                    <tr class="text-gray-700 dark:text-gray-400">
                        <td class="px-4 py-3">
                            <div class="flex items-center text-sm">
                                <!-- Avatar with inset shadow -->
                                <div class="relative hidden w-8 h-8 mr-3 rounded-full md:block">
                                    <img class="object-cover w-full h-full rounded-full"
                                        src="https://images.unsplash.com/photo-1502720705749-871143f0e671?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&s=b8377ca9f985d80264279f277f3a67f5"
                                        alt=""
                                        loading="lazy" />
                                    <div class="absolute inset-0 rounded-full shadow-inner"
                                        aria-hidden="true"></div>
                                </div>
                                <div>
                                    <p class="font-semibold">Dave Li</p>
                                    <p class="text-xs text-gray-600 dark:text-gray-400">
                                        Influencer
                                    </p>
                                </div>
                            </div>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            $ 863.45
                        </td>
                        <td class="px-4 py-3 text-xs">
                            <span
                                class="px-2 py-1 font-semibold leading-tight text-green-700 bg-green-100 rounded-full dark:bg-green-700 dark:text-green-100">
                                Approved
                            </span>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            6/10/2020
                        </td>
                    </tr>

                    <tr class="text-gray-700 dark:text-gray-400">
                        <td class="px-4 py-3">
                            <div class="flex items-center text-sm">
                                <!-- Avatar with inset shadow -->
                                <div class="relative hidden w-8 h-8 mr-3 rounded-full md:block">
                                    <img class="object-cover w-full h-full rounded-full"
                                        src="https://images.unsplash.com/photo-1531746020798-e6953c6e8e04?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&ixid=eyJhcHBfaWQiOjE3Nzg0fQ"
                                        alt=""
                                        loading="lazy" />
                                    <div class="absolute inset-0 rounded-full shadow-inner"
                                        aria-hidden="true"></div>
                                </div>
                                <div>
                                    <p class="font-semibold">Maria Ramovic</p>
                                    <p class="text-xs text-gray-600 dark:text-gray-400">
                                        Runner
                                    </p>
                                </div>
                            </div>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            $ 863.45
                        </td>
                        <td class="px-4 py-3 text-xs">
                            <span
                                class="px-2 py-1 font-semibold leading-tight text-green-700 bg-green-100 rounded-full dark:bg-green-700 dark:text-green-100">
                                Approved
                            </span>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            6/10/2020
                        </td>
                    </tr>

                    <tr class="text-gray-700 dark:text-gray-400">
                        <td class="px-4 py-3">
                            <div class="flex items-center text-sm">
                                <!-- Avatar with inset shadow -->
                                <div class="relative hidden w-8 h-8 mr-3 rounded-full md:block">
                                    <img class="object-cover w-full h-full rounded-full"
                                        src="https://images.unsplash.com/photo-1566411520896-01e7ca4726af?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&ixid=eyJhcHBfaWQiOjE3Nzg0fQ"
                                        alt=""
                                        loading="lazy" />
                                    <div class="absolute inset-0 rounded-full shadow-inner"
                                        aria-hidden="true"></div>
                                </div>
                                <div>
                                    <p class="font-semibold">Hitney Wouston</p>
                                    <p class="text-xs text-gray-600 dark:text-gray-400">
                                        Singer
                                    </p>
                                </div>
                            </div>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            $ 863.45
                        </td>
                        <td class="px-4 py-3 text-xs">
                            <span
                                class="px-2 py-1 font-semibold leading-tight text-green-700 bg-green-100 rounded-full dark:bg-green-700 dark:text-green-100">
                                Approved
                            </span>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            6/10/2020
                        </td>
                    </tr>

                    <tr class="text-gray-700 dark:text-gray-400">
                        <td class="px-4 py-3">
                            <div class="flex items-center text-sm">
                                <!-- Avatar with inset shadow -->
                                <div class="relative hidden w-8 h-8 mr-3 rounded-full md:block">
                                    <img class="object-cover w-full h-full rounded-full"
                                        src="https://images.unsplash.com/flagged/photo-1570612861542-284f4c12e75f?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&ixid=eyJhcHBfaWQiOjE3Nzg0fQ"
                                        alt=""
                                        loading="lazy" />
                                    <div class="absolute inset-0 rounded-full shadow-inner"
                                        aria-hidden="true"></div>
                                </div>
                                <div>
                                    <p class="font-semibold">Hans Burger</p>
                                    <p class="text-xs text-gray-600 dark:text-gray-400">
                                        10x Developer
                                    </p>
                                </div>
                            </div>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            $ 863.45
                        </td>
                        <td class="px-4 py-3 text-xs">
                            <span
                                class="px-2 py-1 font-semibold leading-tight text-green-700 bg-green-100 rounded-full dark:bg-green-700 dark:text-green-100">
                                Approved
                            </span>
                        </td>
                        <td class="px-4 py-3 text-sm">
                            6/10/2020
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div
            class="grid px-4 py-3 text-xs font-semibold tracking-wide text-gray-500 uppercase border-t dark:border-gray-700 bg-gray-50 sm:grid-cols-9 dark:text-gray-400 dark:bg-gray-800">
            <span class="flex items-center col-span-3">
                Showing 21-30 of 100
            </span>
            <span class="col-span-2"></span>
            <!-- Pagination -->
            <span class="flex col-span-4 mt-2 sm:mt-auto sm:justify-end">
                <nav aria-label="Table navigation">
                    <ul class="inline-flex items-center">
                        <li>
                            <button
                                class="px-3 py-1 rounded-md rounded-l-lg focus:outline-none focus:shadow-outline-purple"
                                aria-label="Previous">
                                <svg aria-hidden="true"
                                    class="w-4 h-4 fill-current"
                                    viewBox="0 0 20 20">
                                    <path
                                        d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
                                        clip-rule="evenodd"
                                        fill-rule="evenodd"></path>
                                </svg>
                            </button>
                        </li>
                        <li>
                            <button class="px-3 py-1 rounded-md focus:outline-none focus:shadow-outline-purple">
                                1
                            </button>
                        </li>
                        <li>
                            <button class="px-3 py-1 rounded-md focus:outline-none focus:shadow-outline-purple">
                                2
                            </button>
                        </li>
                        <li>
                            <button
                                class="px-3 py-1 text-white transition-colors duration-150 bg-purple-600 border border-r-0 border-purple-600 rounded-md focus:outline-none focus:shadow-outline-purple">
                                3
                            </button>
                        </li>
                        <li>
                            <button class="px-3 py-1 rounded-md focus:outline-none focus:shadow-outline-purple">
                                4
                            </button>
                        </li>
                        <li>
                            <span class="px-3 py-1">...</span>
                        </li>
                        <li>
                            <button class="px-3 py-1 rounded-md focus:outline-none focus:shadow-outline-purple">
                                8
                            </button>
                        </li>
                        <li>
                            <button class="px-3 py-1 rounded-md focus:outline-none focus:shadow-outline-purple">
                                9
                            </button>
                        </li>
                        <li>
                            <button
                                class="px-3 py-1 rounded-md rounded-r-lg focus:outline-none focus:shadow-outline-purple"
                                aria-label="Next">
                                <svg class="w-4 h-4 fill-current"
                                    aria-hidden="true"
                                    viewBox="0 0 20 20">
                                    <path
                                        d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                                        clip-rule="evenodd"
                                        fill-rule="evenodd"></path>
                                </svg>
                            </button>
                        </li>
                    </ul>
                </nav>
            </span>
        </div>
    </div>
</template>

<style scoped></style>

Step 12: ติดตั้ง Chart.JS
---
npm i vue-chart-3 chart.js

export default {lineChartData, barChartData}

Step 13: แก้ไขไฟล์ route
---
import { createRouter, createWebHistory, RouteRecordRaw } from "vue-router"
import FrontendLayout from "@/layouts/FrontendLayout.vue"
import Home from "@/views/frontend/Home.vue"
import About from "@/views/frontend/About.vue"
import Portfolio from "@/views/frontend/Portfolio.vue"
import Service from "@/views/frontend/Service.vue"
import Contact from "@/views/frontend/Contact.vue"
import Register from "@/views/frontend/Register.vue"
import Login from "@/views/frontend/Login.vue"
import ForgotPassword from "@/views/frontend/ForgotPassword.vue"
import BackendLayout from "@/layouts/BackendLayout.vue"
import Dashboard from "@/views/backend/Dashboard.vue"

const routes: Array<RouteRecordRaw> = [
  // Frontend Route
  {
    // เรียกตัว Frontend Layout (แม่)
    path: "/",
    name: "Frontend",
    component: FrontendLayout,

    // เรียกตัวลูกมาใส่
    children: [
      {
        path: "",
        name: "Home",
        component: Home,
        meta: {
          title: "Home",
        },
      },
      {
        path: "about",
        name: "About",
        component: About,
        meta: {
          title: "เกี่ยวกับเรา",
        },
      },
      {
        path: "portfolio",
        name: "Portfolio",
        component: Portfolio,
        meta: {
          title: "ผลงานของเรา",
        },
      },
      {
        path: "service",
        name: "Service",
        component: Service,
        meta: {
          title: "บริการของเรา",
        },
      },
      {
        path: "contact",
        name: "Contact",
        component: Contact,
        meta: {
          title: "ติดต่อเรา",
        },
      },
      {
        path: "register",
        name: "Register",
        component: Register,
        meta: {
          title: "สมัครสมาชิก",
        },
      },
      {
        path: "login",
        name: "Login",
        component: Login,
        meta: {
          title: "เข้าสู่ระบบ",
        },
      },
      {
        path: "forgotpassword",
        name: "ForgotPassword",
        component: ForgotPassword,
        meta: {
          title: "ลืมรหัสผ่าน",
        },
      },
    ],
  },
  // Backend Route
  {
    path: "/backend",
    component: BackendLayout,
    children: [
      {
        path: "dashboard",
        name: "Dashboard",
        component: Dashboard,
        meta: {
          title: "Dahsboard",
        },
      },
    ],
  },
]

const router = createRouter({
  history: createWebHistory(import.meta.env.URL),
  routes,
})

// การเรียกทำงานก่อนที่ route จะโหลด
router.beforeEach((to, _, next) => {
  if (typeof to.meta.title == "string") {
    document.title = to.meta.title
  }

  next()
})

export default router

Step 14: เพิ่มไฟล์ BackendService.ts
---
import axios from 'axios'

// อ่าน token จาก localStorage
const token = localStorage.getItem('token') || ''

const BackendService = axios.create({
    baseURL: import.meta.env.VITE_APP_URL_API,
    withCredentials: false,
    headers: {
        'Authorization': 'Bearer ' + token // ใส่ token ไปด้วยก่อนส่งไปที่ backend ทุกครั้ง
    }
})

// CRUD Product -----------------------------------
// Read All Products
function getAllProducts() {
    return BackendService.get('products')
}

// Read One Product
function getOneProduct(id: string) {
    return BackendService.get('products/' + id)
}

export {
    BackendService,
    getAllProducts,
    getOneProduct
}

Step 15: สร้าง Views "Product.vue"
---
<script setup lang="ts">

    import { ref, watchEffect } from 'vue'
    import { getAllProducts } from '@/services/BackendService'

    // -------- ส่วนของการดึงข้อมูลมาแสดง ----------
    const products: any = ref([])

    // Pagination
    const page = ref(1)
    const rowsPerPage = ref(20)
    const totalItems = ref(0)

    // เรียกใช้งานฟังก์ชัน getAllProducts จาก BackendService
    const fetchProducts = async () => {
        const res = await getAllProducts(page.value, rowsPerPage.value)
        products.value = res.data.products
        totalItems.value = res.data.total
        console.log(res.data)
    }

    // Watch for changes and fetch products
    watchEffect(() => {
        fetchProducts()
    })

    // Method to format the date 28/02/2022 12:00:00
    const formatDate = (dateString: string): string => {
        const date = new Date(dateString)
        const formattedDate = date.toLocaleString('en-GB', {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit',
        })
        return formattedDate
    }

</script>

<template>
    
    <div class="flex items-center justify-between my-8">
        <h2 class="my-6 text-sm font-semibold text-gray-700 md:text-xl dark:text-gray-200">
            Product list ({{ totalItems }} items)
        </h2>

        <div class="flex justify-center flex-1 lg:mr-32">
            <div class="relative w-full max-w-xl ml-4 mr-6 focus-within:text-gray-500">
                <div class="absolute inset-y-0 flex items-center pl-2">
                    <svg
                    class="w-4 h-4"
                    aria-hidden="true"
                    fill="currentColor"
                    viewBox="0 0 20 20">
                    <path
                        fill-rule="evenodd"
                        d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                        clip-rule="evenodd"></path>
                    </svg>
                </div>
                <form>
                    <input
                        class="w-full py-2 pl-8 pr-2 text-sm text-gray-700 placeholder-gray-600 bg-gray-200 border-0 rounded-md"
                        type="text"
                        placeholder="ป้อนชื่อสินค้าที่ต้องการค้นหา"
                        aria-label="Search"
                    />
                    <button type="submit" class="hidden">Submit</button>
                </form>
            </div>

            <div>
                <button class="flex items-center justify-between px-4 py-1.5 mx-1 text-sm font-medium leading-5 text-white transition-colors duration-150 bg-yellow-500 border border-transparent rounded-lg active:bg-purple-600 hover:bg-yellow-700 focus:outline-none focus:shadow-outline-purple">
                    <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                    </svg>
                    <span>ล้าง</span>
                </button>
            </div>
        </div>

        <button class="flex items-center justify-between px-4 py-2 mx-1 text-sm font-medium leading-5 text-white transition-colors duration-150 bg-green-500 border border-transparent rounded-lg active:bg-purple-600 hover:bg-green-700 focus:outline-none focus:shadow-outline-purple">
            <svg class="w-4 h-4 mr-2 -ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
            </svg>
            <span>เพิ่ม</span>
        </button>
    </div>

    <!-- Pagination Controls -->
    <div class="grid px-4 py-3 text-xs font-semibold tracking-wide text-gray-500 uppercase border-t dark:border-gray-700 bg-gray-50 sm:grid-cols-9 dark:text-gray-400 dark:bg-gray-800 mb-2">
        <span class="flex items-center col-span-3">
            Showing {{ (page - 1) * rowsPerPage + 1 }}-{{ Math.min(page * rowsPerPage, totalItems) }} of {{ totalItems }}
        </span>
        <span class="col-span-2"></span>
        <!-- Pagination -->
        <span class="flex col-span-4 mt-2 sm:mt-auto sm:justify-end">
            <nav aria-label="Table navigation">
                <ul class="inline-flex items-center">
                    <li>
                        <button @click="page--" :disabled="page === 1"
                            class="px-3 py-1 rounded-md rounded-l-lg focus:outline-none focus:shadow-outline-purple"
                            aria-label="Previous">
                            <svg aria-hidden="true" class="w-4 h-4 fill-current" viewBox="0 0 20 20">
                                <path d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" fill-rule="evenodd"></path>
                            </svg>
                        </button>
                    </li>
                    <li v-for="p in Math.ceil(totalItems / rowsPerPage)" :key="p">
                        <button @click="page = p" :class="{'bg-purple-600 text-white': page === p}"
                            class="px-3 py-1 rounded-md focus:outline-none focus:shadow-outline-purple">
                            {{ p }}
                        </button>
                    </li>
                    <li>
                        <button @click="page++" :disabled="page === Math.ceil(totalItems / rowsPerPage)"
                            class="px-3 py-1 rounded-md rounded-r-lg focus:outline-none focus:shadow-outline-purple"
                            aria-label="Next">
                            <svg class="w-4 h-4 fill-current" aria-hidden="true" viewBox="0 0 20 20">
                                <path d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" fill-rule="evenodd"></path>
                            </svg>
                        </button>
                    </li>
                </ul>
            </nav>
        </span>
    </div>

    <!-- ตารางแสดงสินค้า -->
    <div class="w-full overflow-hidden rounded-lg shadow-xs">
        <div class="w-full overflow-x-auto">
            <table class="w-full whitespace-no-wrap">
                <thead>
                    <tr class="text-xs font-semibold tracking-wide text-left text-gray-500 uppercase border-b dark:border-gray-700 bg-gray-50 dark:text-gray-400 dark:bg-gray-800">
                        <th class="px-4 py-3">ID</th>
                        <th class="px-4 py-3">Name</th>
                        <th class="px-4 py-3">Price</th>
                        <th class="px-4 py-3">Category</th>
                        <th class="px-4 py-3">Create at</th>
                        <th class="px-4 py-3">Create by</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y dark:divide-gray-700 dark:bg-gray-800">
                    
                    <tr v-for="product in products" :key="product.id" class="text-gray-700 dark:text-gray-400 hover:bg-blue-100">
                        <td class="px-4 py-3 text-sm">{{ product.id }}</td>
                        <td class="px-4 py-3">
                            <div class="flex items-center text-sm">
                                <div class="relative hidden w-8 h-8 mr-3 rounded-full md:block">
                                    <img class="object-cover w-full h-full rounded-full" src="https://geniusdevlab.com/laravelstoreapp/public/uploads/noimg.jpg" alt="" loading="lazy"/>
                                    <div class="absolute inset-0 rounded-full shadow-inner" aria-hidden="true"></div>
                                </div>
                                <div>
                                    <p class="font-semibold">{{ product.name }}</p>
                                    <p class="text-xs text-gray-600 dark:text-gray-400">Created {{ formatDate(product.created_at) }}</p>
                                </div>
                            </div>
                        </td>
                        <td class="px-4 py-3 text-sm">{{ product.price }}</td>
                        <td class="px-4 py-3 text-sm">{{ product.category_name }}</td>
                        <td class="px-4 py-3 text-sm">{{ formatDate(product.created_at) }}</td>
                        <td class="px-4 py-3 text-sm">{{ product.user_fullname }}</td>                        
                    </tr>

                </tbody>
            </table>            
        </div>
    </div>

    <!-- Pagination Controls -->
    <div class="grid px-4 py-3 text-xs font-semibold tracking-wide text-gray-500 uppercase border-t dark:border-gray-700 bg-gray-50 sm:grid-cols-9 dark:text-gray-400 dark:bg-gray-800 mb-2">
        <span class="flex items-center col-span-3">
            Showing {{ (page - 1) * rowsPerPage + 1 }}-{{ Math.min(page * rowsPerPage, totalItems) }} of {{ totalItems }}
        </span>
        <span class="col-span-2"></span>
        <!-- Pagination -->
        <span class="flex col-span-4 mt-2 sm:mt-auto sm:justify-end">
            <nav aria-label="Table navigation">
                <ul class="inline-flex items-center">
                    <li>
                        <button @click="page--" :disabled="page === 1"
                            class="px-3 py-1 rounded-md rounded-l-lg focus:outline-none focus:shadow-outline-purple"
                            aria-label="Previous">
                            <svg aria-hidden="true" class="w-4 h-4 fill-current" viewBox="0 0 20 20">
                                <path d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" fill-rule="evenodd"></path>
                            </svg>
                        </button>
                    </li>
                    <li v-for="p in Math.ceil(totalItems / rowsPerPage)" :key="p">
                        <button @click="page = p" :class="{'bg-purple-600 text-white': page === p}"
                            class="px-3 py-1 rounded-md focus:outline-none focus:shadow-outline-purple">
                            {{ p }}
                        </button>
                    </li>
                    <li>
                        <button @click="page++" :disabled="page === Math.ceil(totalItems / rowsPerPage)"
                            class="px-3 py-1 rounded-md rounded-r-lg focus:outline-none focus:shadow-outline-purple"
                            aria-label="Next">
                            <svg class="w-4 h-4 fill-current" aria-hidden="true" viewBox="0 0 20 20">
                                <path d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" fill-rule="evenodd"></path>
                            </svg>
                        </button>
                    </li>
                </ul>
            </nav>
        </span>
    </div>

</template>

<style scoped>

</style>

Step 16: การเพิ่ม rotue guard ให้กับ route ของ vue
---
import { createRouter, createWebHistory, RouteRecordRaw } from "vue-router"
import FrontendLayout from "@/layouts/FrontendLayout.vue"
import Home from "@/views/frontend/Home.vue"
import About from "@/views/frontend/About.vue"
import Portfolio from "@/views/frontend/Portfolio.vue"
import Service from "@/views/frontend/Service.vue"
import Contact from "@/views/frontend/Contact.vue"
import ForgotPassword from "@/views/frontend/ForgotPassword.vue"
import Login from "@/views/frontend/Login.vue"
import Register from "@/views/frontend/Register.vue"
import BackendLayout from "@/layouts/BackendLayout.vue"
import Dashboard from "@/views/backend/Dashboard.vue"
import Product from "@/views/backend/Product.vue"

// ฟังก์ชันสำหรับทำ Route Guard
function authGuard(_to: any, _from: any, next: any) {

  // อ่านค่า token จาก localStorage
  let token = ""

  // ตรวจสอบว่ามี token หรือไม่
  try {
      token = localStorage.getItem('token') || ""
      if(token != ""){
        next() // ไปต่อ
      }else{
        next({name: 'Login'}) // ไปหน้า login
      }
  } catch (error) {
      console.log(error)
  }

}

const routes: Array<RouteRecordRaw> = [
  // Frontend Route
  {
    // เรียกตัว Frontend Layout (แม่)
    path: "/",
    name: "Frontend",
    component: FrontendLayout,

    // เรียกตัวลูกมาใส่
    children: [
      {
        path: "",
        name: "Home",
        component: Home,
        meta: {
          title: "Home",
        },
      },
      {
        path: "about",
        name: "About",
        component: About,
        meta: {
          title: "About",
        },
      },
      {
        path: "portfolio",
        name: "Portfolio",
        component: Portfolio,
        meta: {
          title: "ผลงานของเรา",
        },
      },
      {
        path: "service",
        name: "Service",
        component: Service,
        meta: {
          title: "บริการของเรา",
        },
      },
      {
        path: "contact",
        name: "Contact",
        component: Contact,
        meta: {
          title: "ติดต่อเรา",
        },
      },
      {
        path: "register",
        name: "Register",
        component: Register,
        meta: {
          title: "สมัครสมาชิก",
        },
      },
      {
        path: "login",
        name: "Login",
        component: Login,
        meta: {
          title: "เข้าสู่ระบบ",
        },
      },
      {
        path: "forgotpassword",
        name: "ForgotPassword",
        component: ForgotPassword,
        meta: {
          title: "ลืมรหัสผ่าน",
        },
      },
    ],
  },
  // Backend Route
  {
    path: "/backend",
    component: BackendLayout,
    beforeEnter: authGuard,
    children: [
      {
        path: "dashboard",
        name: "Dashboard",
        component: Dashboard,
        meta: {
          title: "Dahsboard",
        },
      },
      {
        path: "product",
        name: "Product",
        component: Product,
        meta: {
          title: "Product",
        },
      }
    ],
  }
]

const router = createRouter({
  history: createWebHistory(import.meta.env.URL),
  routes,
})

// การเรียกทำงานก่อนที่ route จะโหลด
router.beforeEach((to, _, next) => {
  if (typeof to.meta.title == "string") {
    document.title = to.meta.title
  }

  next()
})

export default router

Step 17: ทำการ build และขึ้น production
---
npm run build
